/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import abm.ManejoIp;
import javax.swing.JOptionPane;
import org.javalite.activejdbc.Base;

/**
 *
 * @author nico
 */
public class ConfigurarServerGui extends javax.swing.JDialog {

    /**
     * Creates new form ConfigurarServerGui
     */
    ManejoIp manejo;

    public ConfigurarServerGui(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        manejo = new ManejoIp();
        if (ManejoIp.ipServer.equals("localhost")) {
            isServer.setSelected(true);
            ip.setEnabled(false);
            conexion.setEnabled(false);
        } else {
            isServer.setSelected(false);
            ip.setEnabled(true);
            conexion.setEnabled(true);
            ip.setText(ManejoIp.ipServer);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        isServer = new javax.swing.JCheckBox();
        ip = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        conexion = new javax.swing.JButton();
        guardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuración de la pc");
        setModal(true);
        setResizable(false);

        isServer.setSelected(true);
        isServer.setText("Esta computadora es el servidor");
        isServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isServerActionPerformed(evt);
            }
        });

        ip.setEnabled(false);

        jLabel1.setText("IP del servidor");

        conexion.setText("Probar conexión");
        conexion.setEnabled(false);
        conexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conexionActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(isServer)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(conexion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(isServer)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conexion)
                    .addComponent(guardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isServerActionPerformed

        if (isServer.isSelected()) {
            ip.setText("");
        }
        ip.setEnabled(!isServer.isSelected());
        conexion.setEnabled(!isServer.isSelected());
    }//GEN-LAST:event_isServerActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if (!Base.hasConnection()) {
            Base.open("com.mysql.jdbc.Driver", "jdbc:mysql://localhost/lubricentro", "tecpro", "tecpro");
        }
        boolean res;
        if (isServer.isSelected()) {
            res = manejo.modificarDatos("localhost", true);
        } else {
            res = manejo.modificarDatos(ip.getText(), false);
        }
        if (res) {
            JOptionPane.showMessageDialog(this, "Cambios realizados con éxito", null, JOptionPane.INFORMATION_MESSAGE);
            manejo.conseguirDatos();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Ocurrió un error, intente nuevamente", null, JOptionPane.ERROR_MESSAGE);
        }
        if (Base.hasConnection()) {
            Base.close();
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void conexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conexionActionPerformed
                            if (!Base.hasConnection()) {
                        try{
            Base.open("com.mysql.jdbc.Driver", "jdbc:mysql://"+ip.getText()+"/lubricentro", "tecpro", "tecpro");
            JOptionPane.showMessageDialog(null, "Se ha establecido la conexión con éxito ",null,JOptionPane.INFORMATION_MESSAGE);                    
            }catch(Exception e){
                System.out.println("da");
                JOptionPane.showMessageDialog(null, "Ocurrió un error, no se realizó la conexión con el servidor, verifique la conexión",null,JOptionPane.ERROR_MESSAGE);                    
                }
        }
                            if(Base.hasConnection())
                            Base.close();
    }//GEN-LAST:event_conexionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigurarServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigurarServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigurarServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigurarServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigurarServerGui dialog = new ConfigurarServerGui(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton conexion;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField ip;
    private javax.swing.JCheckBox isServer;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
